/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t public/duck.glb 
*/

import React from 'react';
import type { Mesh, MeshStandardMaterial } from 'three';
import { GLTF } from 'three-stdlib';
import { useGLTF } from '@react-three/drei';

type GLTFResult = GLTF & {
  nodes: {
    character_duck: Mesh;
    character_duckArmLeft: Mesh;
    character_duckArmRight: Mesh;
    Cube1338: Mesh;
    Cube1338_1: Mesh;
    Cube1338_2: Mesh;
  };
  materials: {
    ['White.026']: MeshStandardMaterial;
    ['Yellow.043']: MeshStandardMaterial;
    ['Black.027']: MeshStandardMaterial;
  };
};

const duckUrl = '/models/duck.glb';

export function Duck(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(duckUrl) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.character_duck.geometry}
        material={materials['White.026']}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <mesh
          geometry={nodes.character_duckArmLeft.geometry}
          material={materials['White.026']}
          position={[0.204, 0, -0.634]}
        />
        <mesh
          geometry={nodes.character_duckArmRight.geometry}
          material={materials['White.026']}
          position={[-0.204, 0, -0.634]}
        />
        <group position={[0, 0, -0.704]}>
          <mesh
            geometry={nodes.Cube1338.geometry}
            material={materials['White.026']}
          />
          <mesh
            geometry={nodes.Cube1338_1.geometry}
            material={materials['Yellow.043']}
          />
          <mesh
            geometry={nodes.Cube1338_2.geometry}
            material={materials['Black.027']}
          />
        </group>
      </mesh>
    </group>
  );
}

useGLTF.preload(duckUrl);
