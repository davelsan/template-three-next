/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t ./public/dog.glb -t 
*/

import React from 'react';
import type { Mesh, MeshStandardMaterial } from 'three';
import { GLTF } from 'three-stdlib';
import { useGLTF } from '@react-three/drei';

type GLTFResult = GLTF & {
  nodes: {
    character_dog: Mesh;
    character_dogArmLeft: Mesh;
    character_dogArmRight: Mesh;
    Cube1339: Mesh;
    Cube1339_1: Mesh;
    Cube1339_2: Mesh;
  };
  materials: {
    ['Beige.017']: MeshStandardMaterial;
    ['Red.034']: MeshStandardMaterial;
    ['Black.026']: MeshStandardMaterial;
  };
};

type DogProps = JSX.IntrinsicElements['group'] & {};

export function Dog(props: DogProps) {
  const { nodes, materials } = useGLTF('/models/dog.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.character_dog.geometry}
        material={materials['Beige.017']}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <mesh
          geometry={nodes.character_dogArmLeft.geometry}
          material={materials['Beige.017']}
          position={[0.204, 0, -0.634]}
        />
        <mesh
          geometry={nodes.character_dogArmRight.geometry}
          material={materials['Beige.017']}
          position={[-0.204, 0, -0.634]}
        />
        <group position={[0, 0, -0.704]}>
          <mesh
            geometry={nodes.Cube1339.geometry}
            material={materials['Beige.017']}
          />
          <mesh
            geometry={nodes.Cube1339_1.geometry}
            material={materials['Red.034']}
          />
          <mesh
            geometry={nodes.Cube1339_2.geometry}
            material={materials['Black.026']}
          />
        </group>
      </mesh>
    </group>
  );
}

useGLTF.preload('/dog.glb');
